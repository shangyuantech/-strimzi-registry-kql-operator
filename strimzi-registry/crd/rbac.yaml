---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: schema-registry-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: schema-registry-operator
rules:
  - apiGroups: [""]
    resources: [nodes]
    verbs: [get, list, watch]

  - apiGroups: [""]
    resources: [namespaces]
    verbs: [get, list, watch]

  # Kopf: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]

  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions/status
      - customresourcedefinitions
    verbs: [get, list, watch, patch, create, update, delete, deletecollection]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [kafka.strimzi.io]
    resources:
      - schemaregistries
      - schemaregistries/status
    verbs: ["*"]

  # Access to the built-in resources the operator manages
  - apiGroups: [""]
    resources: [secrets, configmaps, services]
    verbs: [get, list, watch, patch, create, update, delete]

  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: [get, list, watch, patch, create, update, delete]

  # Access to the KafkaUser resource
  - apiGroups: [kafka.strimzi.io]
    resources: [kafkausers, kafkas]
    verbs: [list, get]


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: schema-registry-operator
subjects:
  - kind: User
    name: system:serviceaccount:kafka:schema-registry-operator
    namespace: kafka
roleRef:
  kind: ClusterRole
  name: schema-registry-operator
  apiGroup: rbac.authorization.k8s.io
